---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Lovesh Verma.
--- DateTime: 06-06-2021 01:02 PM
---

--POST REQUESTS TO SERVER (CALLBACKS)
QBCore.Functions.CreateCallback("mdt:server:saveEvidence", function(source, cb, data)
    local createdby = QBCore.Functions.GetPlayer(source).PlayerData.citizenid;
    oxmysql:execute("INSERT INTO `mdt_evidences` (`imgurl`, `description`, `type`, `date`, `createdby`) VALUES (@imgurl, @description, @type, @date, @createdby)", {
        ["@imgurl"] = EscapeSqli(data.imgurl),
        ["@description"] = EscapeSqli(data.description),
        ["@type"] = data.type,
        ["@date"] = EscapeSqli(data.date),
        ["@createdby"] = createdby
    }, function(result)
        local response = (result ~= nil)
        cb(response, result.insertId)
    end, true)
end)

function insertWarrants(data, incidentId, cb)
    for k,v in pairs(data.criminals) do
        if v.warrant.issue then
            oxmysql:execute("INSERT INTO `mdt_warrants` (`incident`, `date`, `citizenid`) VALUES (@incident, @date, @citizenid)", {
                ["@incident"] = incidentId,
                ["@date"] = v.warrant.date,
                ["@citizenid"] = v.citizenid
            }, function(result)
                local response = (result ~= nil)
                return cb(response)
            end, true)
        end
    end
    return cb(true)
end

QBCore.Functions.CreateCallback("mdt:server:saveIncident", function(source, cb, data)

    --New Incident
    if data.loadedIncident == 0 then

        local createdby = QBCore.Functions.GetPlayer(source).PlayerData.citizenid;
        oxmysql:execute("INSERT INTO `mdt_incidents` (`title`, `description`, `persons`, `officers`, `evidences`, `vehicles`, `criminals`, `date`, `createdby`) VALUES (@title, @description, @persons, @officers, @evidences, @vehicles, @criminals, @date, @createdby)", {
            ["@title"] = EscapeSqli(data.title),
            ["@description"] = EscapeSqli(data.description),
            ["@persons"] = json.encode(data.persons),
            ["@officers"] = json.encode(data.officers),
            ["@evidences"] = json.encode(data.evidences),
            ["@vehicles"] = json.encode(data.vehicles),
            ["@criminals"] = json.encode(data.criminals),
            ["@date"] = data.date,
            ["@createdby"] = createdby,
        }, function(insert)
            if insert == nil then return cb(false) end
            insertWarrants(data, insert.insertId, function (warrantResponse)
                cb(warrantResponse, insert.insertId)
            end)
        end, true)
    else --Edit Incident
        oxmysql:execute("UPDATE `mdt_incidents` SET `title` = @title, `description` = @description, `persons` = @persons, `officers` = @officers, `evidences` = @evidences, `vehicles` = @vehicles, `criminals` = @criminals WHERE `id` = @id", {
            ["@title"] = EscapeSqli(data.title),
            ["@description"] = EscapeSqli(data.description),
            ["@persons"] = json.encode(data.persons),
            ["@officers"] = json.encode(data.officers),
            ["@evidences"] = json.encode(data.evidences),
            ["@vehicles"] = json.encode(data.vehicles),
            ["@criminals"] = json.encode(data.criminals),
            ["@id"] = data.loadedIncident,
        }, function(update)
            if update == nil then return cb(false) end
            oxmysql:execute("DELETE FROM `mdt_warrants` WHERE `incident` = @incident", {
                ["@incident"] = data.loadedIncident,
            }, function(delete)
                if delete == nil then return cb(false) end
                insertWarrants(data, data.loadedIncident, function (warrantResponse)
                    cb(warrantResponse, data.loadedIncident)
                end)
            end, true)
        end, true)
    end
end)

QBCore.Functions.CreateCallback("mdt:server:SaveReport", function(source, cb, data)
    --New Report
    if data.loadedReport == 0 then
        local createdby = QBCore.Functions.GetPlayer(source).PlayerData.citizenid;
        oxmysql:execute("INSERT INTO `mdt_reports` (`type`, `title`, `description`, `persons`, `officers`, `evidences`, `vehicles`, `date`, `createdby`) VALUES (@type, @title, @description, @persons, @officers, @evidences, @vehicles, @date, @createdby )", {
            ["@type"] = EscapeSqli(data.type),
            ["@title"] = EscapeSqli(data.title),
            ["@description"] = EscapeSqli(data.description),
            ["@persons"] = json.encode(data.persons),
            ["@officers"] = json.encode(data.officers),
            ["@evidences"] = json.encode(data.evidences),
            ["@vehicles"] = json.encode(data.vehicles),
            ["@date"] = EscapeSqli(data.date),
            ["@createdby"] = createdby,
        }, function(insert)
            cb(insert ~= nil, insert.insertId)
        end, true)
    --Edit Report
    else
        oxmysql:execute("UPDATE `mdt_reports` SET `type` = @type, `title` = @title, `description` = @description, `persons` = @persons, `officers` = @officers, `evidences` = @evidences, `vehicles` = @vehicles WHERE `id` = @id", {
            ["@type"] = EscapeSqli(data.type),
            ["@title"] = EscapeSqli(data.title),
            ["@description"] = EscapeSqli(data.description),
            ["@persons"] = json.encode(data.persons),
            ["@officers"] = json.encode(data.officers),
            ["@evidences"] = json.encode(data.evidences),
            ["@vehicles"] = json.encode(data.vehicles),
            ["@id"] = data.loadedReport,
        }, function(update)
            cb(update ~= nil, data.loadedReport)
        end, true)
    end
end)

--Save Profiles
QBCore.Functions.CreateCallback("mdt:server:SaveVehicleProfile", function(source, cb, data)
    oxmysql:execute("INSERT INTO `mdt_vehicles` (plate, image, notes) VALUES(@plate, @image, @notes) ON DUPLICATE KEY UPDATE image=@image, notes=@notes", {
        ["@plate"] = data.plate,
        ["@image"] = EscapeSqli(data.image),
        ["@notes"] = EscapeSqli(data.notes),
    }, function(result)
        local response = result ~= nil and result.affectedRows > 0
        cb(response)
    end, true)
end)

QBCore.Functions.CreateCallback("mdt:server:SaveProfile", function(source, cb, data)
    oxmysql:execute("INSERT INTO `mdt_profiles` (citizenid, image, notes) VALUES(@citizenid, @image, @notes) ON DUPLICATE KEY UPDATE image=@image, notes=@notes", {
        ["@citizenid"] = data.citizenid,
        ["@image"] = EscapeSqli(data.image),
        ["@notes"] = EscapeSqli(data.notes),
    }, function(result)
        local response = result ~= nil and result.affectedRows > 0
        cb(response)
    end, true)
end)

QBCore.Functions.CreateCallback("mdt:server:SaveConfig", function(source, cb, data)
    local citizenid = QBCore.Functions.GetPlayer(source).PlayerData.citizenid;
    oxmysql:execute("INSERT INTO `mdt_config` (citizenid, sidebar, theme) VALUES (@citizenid, @sidebar, @theme) ON DUPLICATE KEY UPDATE sidebar=@sidebar, theme=@theme", {
        ["@citizenid"] = citizenid,
        ["@sidebar"] = data.sidebar,
        ["@theme"] = data.theme,
    }, function(result)
        local response = result ~= nil
        cb(response)
    end, true)
end)

QBCore.Functions.CreateCallback("mdt:server:warrantAction", function(source, cb, data)
    oxmysql:execute("UPDATE `mdt_warrants` SET `approved` = @approved WHERE `id` = @id", {
        ["@approved"] = data.approved,
        ["@id"] = data.id,
    }, function(result)
        local response = (result ~= nil)
        cb(response)
    end, true)
end)


QBCore.Functions.CreateCallback("mdt:server:RemoveLicense", function(source, cb, citizenid, id)
    local Player = QBCore.Functions.GetPlayerByCitizenId(citizenid)
    local metadata = nil
    if Player ~= nil then
        metadata =  Player.PlayerData.metadata
        metadata.licences[id] = false
        Player.Functions.SetMetaData("licences", metadata.licences)
    end
    oxmysql:execute("SELECT metadata FROM `players` WHERE citizenid = @citizenid", {
        ["@citizenid"] = citizenid,
    }, function(result)
        if result[1] and result[1].metadata then
            if Player == nil then metadata = json.decode(result[1].metadata) end
            metadata.licences[id] = false
            oxmysql:execute("UPDATE `players` SET metadata = @metadata WHERE citizenid = @citizenid", {["@metadata"] = json.encode(metadata), ["@citizenid"] = citizenid})
            cb(true, id)
        else
            cb(false)
        end
    end, true)
end)
